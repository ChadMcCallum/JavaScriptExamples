<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
</head>
<body>
    <div id="numberList">
        <table id="numberTable">
        </table>
        There are <span id="countLabel"></span> numbers in the list
        <input type="button" id="addNumber" value="Add Number" />
        <input type="button" id="resetList" value="Reset List" />
    </div>
    <script type="text/x-jquery-template" id='numberTemplate'>
        <td style="color: {{if Value % 2 === 0 }}red{{else}}green{{/if}}" align='right'>${Value}</td>
        <td><input type='button' class='clear' value='Remove' /></td>
        <td><input type='button' class='reset' value='Reset' /></td>
    </script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js" type="text/javascript"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js"
        type="text/javascript"></script>
    <script src="http://documentcloud.github.com/underscore/underscore-min.js" type="text/javascript"></script>
    <script src="http://documentcloud.github.com/backbone/backbone.js" type="text/javascript"></script>
    <script type="text/javascript">
        //model and collection definition
        window.NumberModel = Backbone.Model.extend({
            initialize: function () {
                if (!this.get("Value")) {
                    this.set({ Value: 0 });
                }
            }
        });

        window.NumberCollection = Backbone.Collection.extend({
            model: NumberModel,
            url: "/Services/Numbers"
        });

        //view representing entire page
        window.PageView = Backbone.View.extend({
            el: $('body'),
            initialize: function () {
                var numberList = new NumberListView();
            }
        });

        //view representing number collection
        window.NumberListView = Backbone.View.extend({
            events: {
                'click #resetList': 'resetList',
                'click #addNumber': 'addNewNumber'
            },
            el: $('#numberList'),
            initialize: function () {
                _.bindAll(this, 'addNumbers', 'addNumber', 'render');
                this.numbers = new NumberCollection();
                this.numbers.bind('reset', this.addNumbers);
                this.numbers.bind('add', this.addNumber);
                this.numbers.bind('remove', this.render);
                this.numbers.fetch();
            },
            addNumbers: function () {
                this.$('#numberTable').empty();
                this.numbers.each(this.addNumber);
                this.render();
            },
            addNumber: function (number) {
                var view = new NumberView({ model: number });
                this.$('#numberTable').append(view.render().el);
                this.render();
            },
            addNewNumber: function () {
                var model = new NumberModel();
                this.numbers.add(model);
                model.save();
            },
            resetList: function () {
                this.numbers.fetch();
            },
            render: function () {
                this.$('#countLabel').html(this.numbers.length);
            }
        });

        window.NumberView = Backbone.View.extend({
            events: {
                'click .clear': 'clear',
                'click .reset': 'reset'
            },
            tagName: 'tr',
            template: $('#numberTemplate'),
            initialize: function () {
                _.bindAll(this, 'render');
                if (this.model != null) {
                    this.model.bind('change', this.render);
                    this.model.view = this;
                }
            },
            render: function () {
                if (this.model) {
                    $(this.el).html(this.template.tmpl(this.model.toJSON()));
                }
                return this;
            },
            clear: function () {
                var currentView = this;
                this.model.destroy({ success: function () {
                    currentView.remove();
                }, error: function () { alert("oh shit!"); }
                });
            },
            reset: function () {
                if (this.model) {
                    this.model.save();
                }
            }
        });

        $(document).ready(function () {
            var page = new PageView();
        });
    </script>
</body>
</html>
